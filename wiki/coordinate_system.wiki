#summary Internal Coordinate System

= Introduction =

This page describes the internal coordinate system used in linux-track.  
This is provided so that all developers are following a consistent coordinate model.  
The coordinate system used is intended to be consistent with the Alter92 coordinate system.

The linux-track pose estimator has the following inputs and outputs:
 * *Reflector model* (input)
 * *Camera Focal Depth* (input)
 * *Reference Frame* (input)
 * *Nth Frame* (input)
 * *Transformation* (output)

The sections below describe 
  # the X-Y-Z coordinate system common to the reflector model and transformation output, 
  # each input/output a bit in detail.
  # A word on "Euler" angles.

= Common X-Y-Z Definition =

When facing the camera, the +X vector is "right."

When facing the camera, the +Y vector is "up."

The +Z vector fires out of the camera.

The all X,Y,Z measurements use units of millimeters.

_picture to be included_

= Input Reflector Model =

The pose estimation algorithm requires the "common" X-Y-Z coordinates of the three points that make up the reflector (or active LEDs).  
The algorithm also requires a reasonable estimate of the user's head-center with respect to the reflector model origin.
All units are in millimeters.

Points must be defined in the common X-Y-Z coordiates with respect to the camera, in a neutral facing.

Point Definitions:
 * Point 0: The topmost (greatest +Y) point shall be defined as the origin of the reflector model, and point 0
 * Point 1: The rightmost (greatest +X) point shall be defined as and point 1
 * Point 2: The remaining reflector point shall be point 2
 * headpoint: the reasonable estiimate of the user's head center with respect to point 0

_picture to be included_

Because point 0 is by definition 0,0,0, it is not an explicit argument to {{{pose_init(struct reflector_model_type rm)}}} {{{pose.c}}}.

= Camera Focal Depth (Viewing Angle) =
The Alter92 algorithm uses weak-perspective, so no Z-translations are directly estimatable.
However, by providing a focal depth the Alter92 scaling factor may be used with the focal depth to estimate Z-translations.

The camera focal depth is given in pixels.

= Input Frames =

Raw images taken from the camera are distilled to reflector/LED "blobs."
A frame input to the pose estimator is defined as three blobs.
Blobs are represented as X,Y vectors in image-space.
The blob vector points to the center of the blob in image-space.
Image-space units are in camera pixels.

In image-space:
 * the origin is in the center of the image.
 * the bottom left corner of the image is (-pixel_width/2, -pixel_height/2).
 * the top right corner of the image is (+pixel_width/2, +pixel_height/2).

== Input Reference Frame ==
TBD

== Input Nth Frame ==
TBD

= Output Transformation =
The linux-track end-output is a transformation.
This transformation is made up of a translation vector and rotation matrix.

== Translation Vector ==
The translation vector describes the user's nthframe head movement relative to the reference frame.
This is represented as a 3x1 vector.

== Rotation Matrix ==
The rotation matrix describes the user's nthframe head rotations relative to the reference frame.
Internally, linux-track represents rotations as a 3x3 matrix. 

= A word on Yaw, Pitch, Roll =

To be defined.

_picture to be included_
